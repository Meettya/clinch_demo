// Generated by clinch 0.4.1
(function() {
  'use strict';
  
  var dependencies, sources, require, modules_cache = {};
  dependencies = {"4195501628":{"fs":538996121,"./tmpl/template":978638470,"jade":538996121}};

  sources = {
"538996121": function(exports, module, require) {
// /Users/meettya/github/clinch_demo/web_modules/noops.coffee 
/*
This is noops shim
*/

module.exports = function() {};

},
"978638470": function(exports, module, require) {
// /Users/meettya/github/clinch_demo/src/tmpl/template.jade 
module.exports = function anonymous(locals) {
var buf = [];
var self = locals || {};
jade.indent = [];
buf.push("\n<div class=\"message\">\n  <p>Hello " + (jade.escape((jade.interp = self.name) == null ? '' : jade.interp)) + "!!!</p>\n</div>");;return buf.join("");
}
},
"4195501628": function(exports, module, require) {
// /Users/meettya/github/clinch_demo/src/greater.coffee 
/*
This is simple test case for Jade-powered template engine
must work in node AND in browser
may be used as example
*/

/*
this two must be reqiured for node
if you prefer have all require() in file head (an I think it good habit)
- you need to REPLACE it in clinch settings, not exclude!!!
*/

var fs, greater, jade;

fs = require('fs');

jade = require('jade');

/*
This function render results with jade template and given data
Its dual-headed version, works in node and in browser
*/


greater = function(data) {
  var options, res, template, template_fn, template_name;
  template_fn = module.id ? (template_name = "" + __dirname + "/tmpl/template.jade", template = fs.readFileSync(template_name, 'utf8'), options = {
    pretty: true,
    self: true,
    filename: template_name
  }, jade.compile(template, options)) : require('./tmpl/template');
  return res = template_fn(data);
};

module.exports = {
  greater: greater
};

}};
if(this.clinch_runtime_v2 == null) {
  throw Error("Resolve clinch runtime library version |2| first!");
}

require = this.clinch_runtime_v2.require_builder(dependencies, sources, modules_cache);

/* bundle export */
this.clinch_demo = {
  main : require(4195501628)
};
}).call(this);